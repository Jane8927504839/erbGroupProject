{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport { computed } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Cart',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const cartItems = computed(() => store.state.cart.items);\n    const total = computed(() => {\n      return cartItems.value.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    });\n    const updateQuantity = (item, change) => {\n      const newQuantity = item.quantity + change;\n      if (newQuantity > 0) {\n        store.commit('cart/updateQuantity', {\n          id: item._id,\n          quantity: newQuantity\n        });\n      }\n    };\n    const removeItem = item => {\n      store.commit('cart/removeItem', item._id);\n    };\n    const checkout = () => {\n      if (!store.state.auth.isLoggedIn) {\n        router.push('/login');\n        return;\n      }\n      router.push('/checkout');\n    };\n    return {\n      cartItems,\n      total,\n      updateQuantity,\n      removeItem,\n      checkout\n    };\n  }\n};","map":{"version":3,"names":["computed","useStore","useRouter","name","setup","store","router","cartItems","state","cart","items","total","value","reduce","sum","item","price","quantity","updateQuantity","change","newQuantity","commit","id","_id","removeItem","checkout","auth","isLoggedIn","push"],"sources":["/Users/jianyurui/Desktop/JAVA/JavaScript/erbGroupProject/sample/shopperZ/client/src/views/CartPage.vue"],"sourcesContent":["<template>\n    <div class=\"container mt-4\">\n      <h2>购物车</h2>\n      <div v-if=\"cartItems.length === 0\" class=\"text-center mt-5\">\n        <p>购物车是空的</p>\n        <router-link to=\"/products\" class=\"btn btn-primary\">\n          去购物\n        </router-link>\n      </div>\n      <div v-else>\n        <div class=\"table-responsive\">\n          <table class=\"table\">\n            <thead>\n              <tr>\n                <th>商品</th>\n                <th>价格</th>\n                <th>数量</th>\n                <th>小计</th>\n                <th>操作</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in cartItems\" :key=\"item._id\">\n                <td>{{ item.name }}</td>\n                <td>¥{{ item.price }}</td>\n                <td>\n                  <div class=\"input-group w-auto\">\n                    <button class=\"btn btn-outline-secondary\" @click=\"updateQuantity(item, -1)\">-</button>\n                    <input type=\"number\" class=\"form-control text-center\" v-model=\"item.quantity\" readonly>\n                    <button class=\"btn btn-outline-secondary\" @click=\"updateQuantity(item, 1)\">+</button>\n                  </div>\n                </td>\n                <td>¥{{ item.price * item.quantity }}</td>\n                <td>\n                  <button class=\"btn btn-danger btn-sm\" @click=\"removeItem(item)\">删除</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"d-flex justify-content-end\">\n          <div class=\"me-3\">\n            <h4>总计: ¥{{ total }}</h4>\n          </div>\n          <button class=\"btn btn-primary\" @click=\"checkout\">结算</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import { computed } from 'vue'\n  import { useStore } from 'vuex'\n  import { useRouter } from 'vue-router'\n  \n  export default {\n    name: 'Cart',\n    setup() {\n      const store = useStore()\n      const router = useRouter()\n  \n      const cartItems = computed(() => store.state.cart.items)\n      const total = computed(() => {\n        return cartItems.value.reduce((sum, item) => sum + item.price * item.quantity, 0)\n      })\n  \n      const updateQuantity = (item, change) => {\n        const newQuantity = item.quantity + change\n        if (newQuantity > 0) {\n          store.commit('cart/updateQuantity', { id: item._id, quantity: newQuantity })\n        }\n      }\n  \n      const removeItem = (item) => {\n        store.commit('cart/removeItem', item._id)\n      }\n  \n      const checkout = () => {\n        if (!store.state.auth.isLoggedIn) {\n          router.push('/login')\n          return\n        }\n        router.push('/checkout')\n      }\n  \n      return {\n        cartItems,\n        total,\n        updateQuantity,\n        removeItem,\n        checkout\n      }\n    }\n  }\n  </script> "],"mappings":";;;AAmDE,SAASA,QAAO,QAAS,KAAI;AAC7B,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,MAAK,GAAIJ,SAAS,CAAC;IAEzB,MAAMK,SAAQ,GAAIP,QAAQ,CAAC,MAAMK,KAAK,CAACG,KAAK,CAACC,IAAI,CAACC,KAAK;IACvD,MAAMC,KAAI,GAAIX,QAAQ,CAAC,MAAM;MAC3B,OAAOO,SAAS,CAACK,KAAK,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAE,GAAIC,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ,EAAE,CAAC;IAClF,CAAC;IAED,MAAMC,cAAa,GAAIA,CAACH,IAAI,EAAEI,MAAM,KAAK;MACvC,MAAMC,WAAU,GAAIL,IAAI,CAACE,QAAO,GAAIE,MAAK;MACzC,IAAIC,WAAU,GAAI,CAAC,EAAE;QACnBf,KAAK,CAACgB,MAAM,CAAC,qBAAqB,EAAE;UAAEC,EAAE,EAAEP,IAAI,CAACQ,GAAG;UAAEN,QAAQ,EAAEG;QAAY,CAAC;MAC7E;IACF;IAEA,MAAMI,UAAS,GAAKT,IAAI,IAAK;MAC3BV,KAAK,CAACgB,MAAM,CAAC,iBAAiB,EAAEN,IAAI,CAACQ,GAAG;IAC1C;IAEA,MAAME,QAAO,GAAIA,CAAA,KAAM;MACrB,IAAI,CAACpB,KAAK,CAACG,KAAK,CAACkB,IAAI,CAACC,UAAU,EAAE;QAChCrB,MAAM,CAACsB,IAAI,CAAC,QAAQ;QACpB;MACF;MACAtB,MAAM,CAACsB,IAAI,CAAC,WAAW;IACzB;IAEA,OAAO;MACLrB,SAAS;MACTI,KAAK;MACLO,cAAc;MACdM,UAAU;MACVC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}